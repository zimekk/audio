"use strict";(self.webpackChunk_dev_web=self.webpackChunk_dev_web||[]).push([[80],{80:(t,e,r)=>{r.r(e),r.d(e,{default:()=>f});var n=r(1855),o=r(4084);function a(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,a,u,i=[],c=!0,l=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;c=!1}else for(;!(c=(n=a.call(r)).done)&&(i.push(n.value),i.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=r.return&&(u=r.return(),Object(u)!==u))return}finally{if(l)throw o}}return i}}(t,e)||u(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(t,e){if(t){if("string"==typeof t)return i(t,e);var r={}.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(t,e):void 0}}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}var c=function(){return a((0,n.useState)((function(){return o.Transport.start(),[(new o.FMSynth).toDestination(),(new o.AMSynth).toDestination()]})),1)[0]};function l(t){var e=t.synth,r=t.start,u=t.tone,i=void 0===u?"C2":u,c=a((0,n.useState)(!1),2),l=c[0],f=c[1],s=(0,n.useRef)(null);return(0,n.useEffect)((function(){new o.Loop((function(t){s&&s.current&&s.current.checked&&e.triggerAttackRelease(i,"8n",t)}),"1n").start(r)}),[s]),n.createElement("input",{ref:s,type:"checkbox",checked:l,onChange:function(t){return f((function(t){return!t}))}})}function f(){var t=c();return n.createElement("div",null,"Tones",t.map((function(t,e){return n.createElement("div",{key:e},(r=Array(16),function(t){if(Array.isArray(t))return i(t)}(r)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(r)||u(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(e,r){return n.createElement(l,{key:r,synth:t,start:r?"".concat(r,"n"):"0"})})));var r})))}}}]);